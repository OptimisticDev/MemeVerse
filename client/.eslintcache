[{"D:\\MemeVerse\\client\\src\\constants\\apiUrl.js":"1","D:\\MemeVerse\\client\\src\\App.js":"2","D:\\MemeVerse\\client\\src\\components\\screens\\Home.js":"3","D:\\MemeVerse\\client\\src\\components\\screens\\NewPassword.js":"4","D:\\MemeVerse\\client\\src\\components\\screens\\Profile.js":"5","D:\\MemeVerse\\client\\src\\components\\screens\\ResetPassword.js":"6","D:\\MemeVerse\\client\\src\\components\\screens\\Signin.js":"7","D:\\MemeVerse\\client\\src\\components\\Navbar.js":"8","D:\\MemeVerse\\client\\src\\constants\\constants.js":"9","D:\\MemeVerse\\client\\src\\components\\screens\\Signup.js":"10","D:\\MemeVerse\\client\\src\\components\\shared\\Error.js":"11","D:\\MemeVerse\\client\\src\\components\\shared\\PostCard.js":"12"},{"size":750,"mtime":1609842457515,"results":"13","hashOfConfig":"14"},{"size":1901,"mtime":1609843761961,"results":"15","hashOfConfig":"14"},{"size":2078,"mtime":1609842390113,"results":"16","hashOfConfig":"14"},{"size":1891,"mtime":1609835714468,"results":"17","hashOfConfig":"14"},{"size":5048,"mtime":1609842903375,"results":"18","hashOfConfig":"14"},{"size":1699,"mtime":1609835749536,"results":"19","hashOfConfig":"14"},{"size":3005,"mtime":1609842964298,"results":"20","hashOfConfig":"14"},{"size":1620,"mtime":1609842991994,"results":"21","hashOfConfig":"14"},{"size":92,"mtime":1609485747468,"results":"22","hashOfConfig":"14"},{"size":2786,"mtime":1609835773080,"results":"23","hashOfConfig":"14"},{"size":154,"mtime":1609793276050,"results":"24","hashOfConfig":"14"},{"size":2093,"mtime":1609787912082,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h5rtxv",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\MemeVerse\\client\\src\\constants\\apiUrl.js",[],"D:\\MemeVerse\\client\\src\\App.js",["53","54"],"import React, { useEffect, createContext, useReducer, useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/screens/Home\";\nimport Signin from \"./components/screens/Signin\";\nimport Signup from \"./components/screens/Signup\";\nimport Profile from \"./components/screens/Profile\";\nimport ResetPassword from \"./components/screens/ResetPassword\";\nimport NewPassword from \"./components/screens/NewPassword\";\n\nimport { reducer, initialState } from \"./reducers/userReducer\";\nimport { LOCAL_STORAGE_USER_KEY } from \"./constants/constants\";\n\nexport const UserContext = createContext();\n\nconst Routing = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(LOCAL_STORAGE_USER_KEY));\n    if (user) {\n      dispatch({ type: \"USER\", payload: user });\n      // history.push(\"/\");\n      <Redirect to=\"/\" />;\n    } else {\n      if (!history.location.pathname.startsWith(\"/reset\"))\n        history.push(\"/signin\");\n    }\n  }, []);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route exact path=\"/reset\">\n        <ResetPassword />\n      </Route>\n      <Route path=\"/reset/:token\">\n        <NewPassword />\n      </Route>\n    </Switch>\n  );\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <Router>\n        <Navbar />\n        <Routing />\n      </Router>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","D:\\MemeVerse\\client\\src\\components\\screens\\Home.js",["55"],"D:\\MemeVerse\\client\\src\\components\\screens\\NewPassword.js",[],["56","57"],"D:\\MemeVerse\\client\\src\\components\\screens\\Profile.js",["58","59","60"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport axios from \"axios\";\r\nimport M from \"materialize-css\";\r\n\r\nimport {\r\n  POST_ERROR_INITIAL_STATE,\r\n  POST_INITIAL_STATE,\r\n} from \"../../constants/initialState\";\r\nimport {\r\n  CLOUDNARY_API_URL,\r\n  POST_GET_MYPOST_URL,\r\n  POST_POST_URL,\r\n} from \"../../constants/apiUrl\";\r\n\r\nimport Error from \"../shared/Error\";\r\nimport UserPostCard from \"../shared/UserPostCard\";\r\n\r\nimport { authorizedHeaderHelper } from \"../../helpers/authorizedHeaderHelper\";\r\n\r\nconst Profile = () => {\r\n  const history = useHistory();\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [post, setPost] = useState(POST_INITIAL_STATE);\r\n  const [errorMsg, setErrorMsg] = useState(POST_ERROR_INITIAL_STATE);\r\n  const [image, setImage] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const postHandler = (e) => {\r\n    e.preventDefault();\r\n    const key = e.target.id;\r\n    const value = e.target.value;\r\n    setPost({ ...post, [key]: value });\r\n  };\r\n\r\n  const uploadPhoto = async () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"Memeverse\");\r\n    data.append(\"cloud_name\", \"dhku5t0x0\");\r\n\r\n    if (image) {\r\n      const res = await axios.post(CLOUDNARY_API_URL, data);\r\n      if (res) {\r\n        const { data } = res;\r\n        setPost({ ...post, image: data.url });\r\n      }\r\n    } else {\r\n      setErrorMsg({ ...errorMsg, image: \"You haven't attach photo yet!\" });\r\n    }\r\n  };\r\n\r\n  const postDetails = async () => {\r\n    if (post.image) {\r\n      const headers = authorizedHeaderHelper();\r\n\r\n      const { data } = await axios.post(POST_POST_URL, post, {\r\n        headers: headers,\r\n      });\r\n\r\n      if (data) {\r\n        const { errors, success, message, user, token } = data;\r\n\r\n        if (success) {\r\n          M.toast({ html: message, classes: \"success\" });\r\n          setPost({ ...POST_INITIAL_STATE });\r\n          history.push(\"/hub\");\r\n        } else {\r\n          M.toast({ html: errors.invalidUser, classes: \"error\" });\r\n          setErrorMsg({ ...errors });\r\n        }\r\n      }\r\n    } else {\r\n      setErrorMsg({ ...errorMsg, image: \"Image didn't upload yet!\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const headers = authorizedHeaderHelper();\r\n\r\n    const getAllPosts = async () => {\r\n      const { data } = await axios.get(POST_GET_MYPOST_URL, { headers });\r\n\r\n      if (data) {\r\n        const { myPosts, success } = data;\r\n        // console.log(data);\r\n        if (success) {\r\n          setPosts(myPosts);\r\n        }\r\n      }\r\n    };\r\n\r\n    getAllPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"profile\">\r\n        <div className=\"profile__content\">\r\n          <h5>{state?.name}</h5>\r\n          <h6>\r\n            {posts.length <= 1\r\n              ? `${posts.length} post`\r\n              : `${posts.length} posts`}\r\n          </h6>\r\n        </div>\r\n        <div className=\"card input-field generate__post\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            placeholder=\"title\"\r\n            value={post.title}\r\n            onChange={postHandler}\r\n          />\r\n          {errorMsg.title && <Error error={errorMsg.title} />}\r\n          <input\r\n            type=\"text\"\r\n            id=\"body\"\r\n            placeholder=\"body\"\r\n            value={post.body}\r\n            onChange={postHandler}\r\n          />\r\n          {errorMsg.body && <Error error={errorMsg.body} />}\r\n          <div className=\"file-field input-field\">\r\n            <div className=\"red lighten-2 btn\">\r\n              <span>Attach photo</span>\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  setErrorMsg({ ...POST_ERROR_INITIAL_STATE });\r\n                  setImage(e.target.files[0]);\r\n                }}\r\n              ></input>\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n              <input\r\n                className=\"file-path validate\"\r\n                type=\"text\"\r\n                value={post.image}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          {errorMsg.image && <Error error={errorMsg.image} />}\r\n          <button\r\n            className={\r\n              post.image\r\n                ? \"waves-effect waves-light green lighten-2 btn\"\r\n                : \"waves-effect waves-light red lighten-2 btn\"\r\n            }\r\n            style={{ marginRight: \"10px\" }}\r\n            onClick={uploadPhoto}\r\n          >\r\n            Upload Photo\r\n          </button>\r\n          <button\r\n            className=\"waves-effect waves-light red lighten-2 btn\"\r\n            onClick={postDetails}\r\n          >\r\n            Share Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"gallary-container\">\r\n        {posts.length > 0 &&\r\n          posts.map((post, i) => <UserPostCard key={i} image={post.image} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\MemeVerse\\client\\src\\components\\screens\\ResetPassword.js",[],"D:\\MemeVerse\\client\\src\\components\\screens\\Signin.js",["61","62"],"D:\\MemeVerse\\client\\src\\components\\Navbar.js",[],"D:\\MemeVerse\\client\\src\\constants\\constants.js",[],"D:\\MemeVerse\\client\\src\\components\\screens\\Signup.js",[],"D:\\MemeVerse\\client\\src\\components\\shared\\Error.js",[],"D:\\MemeVerse\\client\\src\\components\\shared\\PostCard.js",["63"],{"ruleId":"64","severity":1,"message":"65","line":25,"column":11,"nodeType":"66","messageId":"67","endLine":25,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":36,"column":6,"nodeType":"70","endLine":36,"endColumn":8,"suggestions":"71"},{"ruleId":"64","severity":1,"message":"72","line":16,"column":18,"nodeType":"66","messageId":"67","endLine":16,"endColumn":26},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"64","severity":1,"message":"72","line":25,"column":18,"nodeType":"66","messageId":"67","endLine":25,"endColumn":26},{"ruleId":"64","severity":1,"message":"77","line":64,"column":43,"nodeType":"66","messageId":"67","endLine":64,"endColumn":47},{"ruleId":"64","severity":1,"message":"78","line":64,"column":49,"nodeType":"66","messageId":"67","endLine":64,"endColumn":54},{"ruleId":"64","severity":1,"message":"79","line":2,"column":16,"nodeType":"66","messageId":"67","endLine":2,"endColumn":24},{"ruleId":"64","severity":1,"message":"65","line":21,"column":11,"nodeType":"66","messageId":"67","endLine":21,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":11,"column":11,"nodeType":"82","endLine":11,"endColumn":30},"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["83"],"'dispatch' is assigned a value but never used.","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"'user' is assigned a value but never used.","'token' is assigned a value but never used.","'Redirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"86","fix":"87"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch, history]",{"range":"88","text":"89"},[1171,1173],"[dispatch, history]"]