[{"D:\\MemeVerse\\client\\src\\constants\\apiUrl.js":"1","D:\\MemeVerse\\client\\src\\App.js":"2","D:\\MemeVerse\\client\\src\\components\\screens\\Home.js":"3","D:\\MemeVerse\\client\\src\\components\\screens\\NewPassword.js":"4","D:\\MemeVerse\\client\\src\\components\\screens\\Profile.js":"5","D:\\MemeVerse\\client\\src\\components\\screens\\ResetPassword.js":"6","D:\\MemeVerse\\client\\src\\components\\screens\\Signin.js":"7","D:\\MemeVerse\\client\\src\\components\\Navbar.js":"8","D:\\MemeVerse\\client\\src\\constants\\constants.js":"9","D:\\MemeVerse\\client\\src\\components\\screens\\Signup.js":"10","D:\\MemeVerse\\client\\src\\components\\shared\\Error.js":"11","D:\\MemeVerse\\client\\src\\components\\shared\\PostCard.js":"12"},{"size":750,"mtime":1609842457515,"results":"13","hashOfConfig":"14"},{"size":1931,"mtime":1609843887843,"results":"15","hashOfConfig":"14"},{"size":2078,"mtime":1609842390113,"results":"16","hashOfConfig":"14"},{"size":1891,"mtime":1609835714468,"results":"17","hashOfConfig":"14"},{"size":5048,"mtime":1609842903375,"results":"18","hashOfConfig":"14"},{"size":1699,"mtime":1609835749536,"results":"19","hashOfConfig":"14"},{"size":3008,"mtime":1609843857920,"results":"20","hashOfConfig":"14"},{"size":1620,"mtime":1609842991994,"results":"21","hashOfConfig":"14"},{"size":92,"mtime":1609485747468,"results":"22","hashOfConfig":"14"},{"size":2786,"mtime":1609835773080,"results":"23","hashOfConfig":"14"},{"size":154,"mtime":1609793276050,"results":"24","hashOfConfig":"14"},{"size":2093,"mtime":1609787912082,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h5rtxv",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\MemeVerse\\client\\src\\constants\\apiUrl.js",[],"D:\\MemeVerse\\client\\src\\App.js",["52","53"],"D:\\MemeVerse\\client\\src\\components\\screens\\Home.js",["54"],"D:\\MemeVerse\\client\\src\\components\\screens\\NewPassword.js",[],["55","56"],"D:\\MemeVerse\\client\\src\\components\\screens\\Profile.js",["57","58","59"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport axios from \"axios\";\r\nimport M from \"materialize-css\";\r\n\r\nimport {\r\n  POST_ERROR_INITIAL_STATE,\r\n  POST_INITIAL_STATE,\r\n} from \"../../constants/initialState\";\r\nimport {\r\n  CLOUDNARY_API_URL,\r\n  POST_GET_MYPOST_URL,\r\n  POST_POST_URL,\r\n} from \"../../constants/apiUrl\";\r\n\r\nimport Error from \"../shared/Error\";\r\nimport UserPostCard from \"../shared/UserPostCard\";\r\n\r\nimport { authorizedHeaderHelper } from \"../../helpers/authorizedHeaderHelper\";\r\n\r\nconst Profile = () => {\r\n  const history = useHistory();\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [post, setPost] = useState(POST_INITIAL_STATE);\r\n  const [errorMsg, setErrorMsg] = useState(POST_ERROR_INITIAL_STATE);\r\n  const [image, setImage] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const postHandler = (e) => {\r\n    e.preventDefault();\r\n    const key = e.target.id;\r\n    const value = e.target.value;\r\n    setPost({ ...post, [key]: value });\r\n  };\r\n\r\n  const uploadPhoto = async () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"Memeverse\");\r\n    data.append(\"cloud_name\", \"dhku5t0x0\");\r\n\r\n    if (image) {\r\n      const res = await axios.post(CLOUDNARY_API_URL, data);\r\n      if (res) {\r\n        const { data } = res;\r\n        setPost({ ...post, image: data.url });\r\n      }\r\n    } else {\r\n      setErrorMsg({ ...errorMsg, image: \"You haven't attach photo yet!\" });\r\n    }\r\n  };\r\n\r\n  const postDetails = async () => {\r\n    if (post.image) {\r\n      const headers = authorizedHeaderHelper();\r\n\r\n      const { data } = await axios.post(POST_POST_URL, post, {\r\n        headers: headers,\r\n      });\r\n\r\n      if (data) {\r\n        const { errors, success, message, user, token } = data;\r\n\r\n        if (success) {\r\n          M.toast({ html: message, classes: \"success\" });\r\n          setPost({ ...POST_INITIAL_STATE });\r\n          history.push(\"/hub\");\r\n        } else {\r\n          M.toast({ html: errors.invalidUser, classes: \"error\" });\r\n          setErrorMsg({ ...errors });\r\n        }\r\n      }\r\n    } else {\r\n      setErrorMsg({ ...errorMsg, image: \"Image didn't upload yet!\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const headers = authorizedHeaderHelper();\r\n\r\n    const getAllPosts = async () => {\r\n      const { data } = await axios.get(POST_GET_MYPOST_URL, { headers });\r\n\r\n      if (data) {\r\n        const { myPosts, success } = data;\r\n        // console.log(data);\r\n        if (success) {\r\n          setPosts(myPosts);\r\n        }\r\n      }\r\n    };\r\n\r\n    getAllPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"profile\">\r\n        <div className=\"profile__content\">\r\n          <h5>{state?.name}</h5>\r\n          <h6>\r\n            {posts.length <= 1\r\n              ? `${posts.length} post`\r\n              : `${posts.length} posts`}\r\n          </h6>\r\n        </div>\r\n        <div className=\"card input-field generate__post\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            placeholder=\"title\"\r\n            value={post.title}\r\n            onChange={postHandler}\r\n          />\r\n          {errorMsg.title && <Error error={errorMsg.title} />}\r\n          <input\r\n            type=\"text\"\r\n            id=\"body\"\r\n            placeholder=\"body\"\r\n            value={post.body}\r\n            onChange={postHandler}\r\n          />\r\n          {errorMsg.body && <Error error={errorMsg.body} />}\r\n          <div className=\"file-field input-field\">\r\n            <div className=\"red lighten-2 btn\">\r\n              <span>Attach photo</span>\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  setErrorMsg({ ...POST_ERROR_INITIAL_STATE });\r\n                  setImage(e.target.files[0]);\r\n                }}\r\n              ></input>\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n              <input\r\n                className=\"file-path validate\"\r\n                type=\"text\"\r\n                value={post.image}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          {errorMsg.image && <Error error={errorMsg.image} />}\r\n          <button\r\n            className={\r\n              post.image\r\n                ? \"waves-effect waves-light green lighten-2 btn\"\r\n                : \"waves-effect waves-light red lighten-2 btn\"\r\n            }\r\n            style={{ marginRight: \"10px\" }}\r\n            onClick={uploadPhoto}\r\n          >\r\n            Upload Photo\r\n          </button>\r\n          <button\r\n            className=\"waves-effect waves-light red lighten-2 btn\"\r\n            onClick={postDetails}\r\n          >\r\n            Share Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"gallary-container\">\r\n        {posts.length > 0 &&\r\n          posts.map((post, i) => <UserPostCard key={i} image={post.image} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\MemeVerse\\client\\src\\components\\screens\\ResetPassword.js",[],"D:\\MemeVerse\\client\\src\\components\\screens\\Signin.js",["60","61"],"D:\\MemeVerse\\client\\src\\components\\Navbar.js",[],"D:\\MemeVerse\\client\\src\\constants\\constants.js",[],"D:\\MemeVerse\\client\\src\\components\\screens\\Signup.js",[],"D:\\MemeVerse\\client\\src\\components\\shared\\Error.js",[],"D:\\MemeVerse\\client\\src\\components\\shared\\PostCard.js",["62"],{"ruleId":"63","severity":1,"message":"64","line":25,"column":11,"nodeType":"65","messageId":"66","endLine":25,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":36,"column":6,"nodeType":"69","endLine":36,"endColumn":8,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":16,"column":18,"nodeType":"65","messageId":"66","endLine":16,"endColumn":26},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"63","severity":1,"message":"71","line":25,"column":18,"nodeType":"65","messageId":"66","endLine":25,"endColumn":26},{"ruleId":"63","severity":1,"message":"76","line":64,"column":43,"nodeType":"65","messageId":"66","endLine":64,"endColumn":47},{"ruleId":"63","severity":1,"message":"77","line":64,"column":49,"nodeType":"65","messageId":"66","endLine":64,"endColumn":54},{"ruleId":"63","severity":1,"message":"64","line":21,"column":11,"nodeType":"65","messageId":"66","endLine":21,"endColumn":16},{"ruleId":"63","severity":1,"message":"78","line":22,"column":9,"nodeType":"65","messageId":"66","endLine":22,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":11,"column":11,"nodeType":"81","endLine":11,"endColumn":30},"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["82"],"'dispatch' is assigned a value but never used.","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'user' is assigned a value but never used.","'token' is assigned a value but never used.","'history' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"85","fix":"86"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch, history]",{"range":"87","text":"88"},[1174,1176],"[dispatch, history]"]